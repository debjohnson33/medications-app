{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { resetMedicationForm } from './medicationForm';\nimport { handleErrors } from './reviews';\nvar API_URL = process.env.REACT_APP_API_URL;\nexport var medicationsFetchDataSuccess = function medicationsFetchDataSuccess(medications) {\n  return {\n    type: 'MEDICATIONS_FETCH_DATA_SUCCESS',\n    medications: medications\n  };\n};\nexport var addMedication = function addMedication(medication) {\n  return {\n    type: 'ADD_MEDICATION_SUCCESS',\n    medication: medication\n  };\n};\nexport var destroyMedication = function destroyMedication(medicationId) {\n  return {\n    type: 'DELETE_MEDICATION_SUCCESS',\n    medicationId: medicationId\n  };\n};\nexport var fetchMedications = function fetchMedications() {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/medications\")).then(function (response) {\n      return response.json();\n    }).then(function (medications) {\n      dispatch(medicationsFetchDataSuccess(medications));\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var createMedication = function createMedication(medication) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/medications\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        medication: medication\n      })\n    }).then(handleErrors).then(function (response) {\n      return response.json();\n    }).then(function (medication) {\n      dispatch(addMedication(medication));\n      dispatch(resetMedicationForm()); //history.push('/medications')\n    }).catch(function (error) {\n      dispatch({\n        type: 'error'\n      });\n    });\n  };\n};\nexport var deleteMedication = function deleteMedication(medicationId) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/medications/\").concat(medicationId), {\n      method: 'DELETE'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (medication) {\n      dispatch(destroyMedication(medicationId));\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/debjohnson/Development/code/labs/medications-app/client/src/actions/medications.js"],"names":["fetch","resetMedicationForm","handleErrors","API_URL","process","env","REACT_APP_API_URL","medicationsFetchDataSuccess","medications","type","addMedication","medication","destroyMedication","medicationId","fetchMedications","dispatch","then","response","json","catch","error","console","log","createMedication","method","headers","body","JSON","stringify","deleteMedication"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport { resetMedicationForm } from './medicationForm';\nimport { handleErrors } from './reviews';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport const medicationsFetchDataSuccess = medications => {\n\treturn {\n\t\ttype: 'MEDICATIONS_FETCH_DATA_SUCCESS',\n\t\tmedications\n\t}\n}\n\nexport const addMedication = medication => {\n\treturn {\n\t\ttype: 'ADD_MEDICATION_SUCCESS',\n\t\tmedication: medication\n\t}\n}\n\nexport const destroyMedication = medicationId => {\n\treturn {\n\t\ttype: 'DELETE_MEDICATION_SUCCESS',\n\t\tmedicationId\n\t}\n}\n\nexport const fetchMedications = () => {\n\treturn dispatch => {\n\t\treturn fetch(`${API_URL}/medications`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(medications => {\n\t\t\t\tdispatch(medicationsFetchDataSuccess(medications));\n\t\t\t})\n\t\t\t.catch(error => console.log(error));\n\t};\n};\n\nexport const createMedication = (medication) => {\n\treturn dispatch => {\n\t\treturn fetch(`${API_URL}/medications`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({ medication: medication })\n\t\t})\n\t\t\t.then(handleErrors)\n\t\t\t.then(response => response.json())\n\t\t\t.then(medication => {\n\t\t\t\tdispatch(addMedication(medication))\n\t\t\t\tdispatch(resetMedicationForm())\n\t\t\t\t//history.push('/medications')\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tdispatch({type: 'error'})\n\t\t\t})\n\t}\t\n}\n\nexport const deleteMedication = (medicationId) => {\n\treturn dispatch => {\n\t\treturn fetch(`${API_URL}/medications/${medicationId}`, {\n\t\t\tmethod: 'DELETE',\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(medication => {\n\t\t\t\tdispatch(destroyMedication(medicationId))\n\t\t\t})\n\t\t\t.catch(error => console.log(error))\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}