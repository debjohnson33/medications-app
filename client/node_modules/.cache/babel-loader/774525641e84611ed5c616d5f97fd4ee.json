{"ast":null,"code":"import { resetReviewForm } from './reviewForm';\nvar API_URL = process.env.REACT_APP_API_URL;\n\nvar reviewsFetchDataSuccess = function reviewsFetchDataSuccess(reviews) {\n  return {\n    type: 'REVIEWS_FETCH_DATA_SUCCESS',\n    reviews: reviews\n  };\n};\n\nvar addReview = function addReview(review) {\n  return {\n    type: 'CREATE_REVIEW_SUCCESS',\n    review: review\n  };\n};\n\nexport var fetchReviews = function fetchReviews() {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/reviews\")).then(function (response) {\n      return response.json();\n    }).then(function (reviews) {\n      dispatch(reviewsFetchDataSuccess(reviews));\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var createReview = function createReview(review, medication_id) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/medications/\").concat(medication_id, \"/reviews\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        review: review\n      })\n    }).then(handleErrors).then(function (response) {\n      return response.json();\n    }).then(function (review) {\n      dispatch(addReview(review));\n      dispatch(resetReviewForm());\n    }).catch(function (error) {\n      dispatch({\n        type: 'error'\n      });\n    });\n  };\n};\nexport function handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n\n  return response;\n}","map":{"version":3,"sources":["/Users/debjohnson/Development/code/labs/medications-app/client/src/actions/reviews.js"],"names":["resetReviewForm","API_URL","process","env","REACT_APP_API_URL","reviewsFetchDataSuccess","reviews","type","addReview","review","fetchReviews","dispatch","fetch","then","response","json","catch","error","console","log","createReview","medication_id","method","headers","body","JSON","stringify","handleErrors","ok","Error","statusText"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,OAAO,EAAI;AAC1C,SAAO;AACNC,IAAAA,IAAI,EAAE,4BADA;AAEND,IAAAA,OAAO,EAAPA;AAFM,GAAP;AAIA,CALD;;AAMA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAAC,MAAM,EAAI;AAC3B,SAAO;AACNF,IAAAA,IAAI,EAAE,uBADA;AAENE,IAAAA,MAAM,EAANA;AAFM,GAAP;AAIA,CALD;;AAOA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACjC,SAAO,UAAAC,QAAQ,EAAI;AAClB,WAAOC,KAAK,WAAIX,OAAJ,cAAL,CACLY,IADK,CACA,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADR,EAELF,IAFK,CAEA,UAAAP,OAAO,EAAI;AAChBK,MAAAA,QAAQ,CAACN,uBAAuB,CAACC,OAAD,CAAxB,CAAR;AACA,KAJK,EAKLU,KALK,CAKC,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KALN,CAAP;AAMA,GAPD;AAQA,CATM;AAWP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACX,MAAD,EAASY,aAAT,EAA2B;AACtD,SAAO,UAAAV,QAAQ,EAAI;AAClB,WAAOC,KAAK,WAAIX,OAAJ,0BAA2BoB,aAA3B,eAAoD;AAC/DC,MAAAA,MAAM,EAAE,MADuD;AAE/DC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAFsD;AAK/DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEjB,QAAAA,MAAM,EAAEA;AAAV,OAAf;AALyD,KAApD,CAAL,CAONI,IAPM,CAODc,YAPC,EAQNd,IARM,CAQD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KARP,EASNF,IATM,CASD,UAAAJ,MAAM,EAAI;AACfE,MAAAA,QAAQ,CAACH,SAAS,CAACC,MAAD,CAAV,CAAR;AACAE,MAAAA,QAAQ,CAACX,eAAe,EAAhB,CAAR;AACA,KAZM,EAaNgB,KAbM,CAaA,UAAAC,KAAK,EAAI;AACfN,MAAAA,QAAQ,CAAC;AAACJ,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACA,KAfM,CAAP;AAgBA,GAjBD;AAkBA,CAnBM;AAqBP,OAAO,SAASoB,YAAT,CAAsBb,QAAtB,EAAgC;AACtC,MAAG,CAACA,QAAQ,CAACc,EAAb,EAAiB;AAChB,UAAMC,KAAK,CAACf,QAAQ,CAACgB,UAAV,CAAX;AACA;;AACD,SAAOhB,QAAP;AACA","sourcesContent":["import { resetReviewForm } from './reviewForm';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst reviewsFetchDataSuccess = reviews => {\n\treturn {\n\t\ttype: 'REVIEWS_FETCH_DATA_SUCCESS',\n\t\treviews\n\t}\n}\nconst addReview = review => {\n\treturn {\n\t\ttype: 'CREATE_REVIEW_SUCCESS',\n\t\treview\n\t}\n}\n\nexport const fetchReviews = () => {\n\treturn dispatch => {\n\t\treturn fetch(`${API_URL}/reviews`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(reviews => {\n\t\t\t\tdispatch(reviewsFetchDataSuccess(reviews));\n\t\t\t})\n\t\t\t.catch(error => console.log(error));\n\t};\n};\n\nexport const createReview = (review, medication_id) => {\n\treturn dispatch => {\n\t\treturn fetch(`${API_URL}/medications/${medication_id}/reviews`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({ review: review })\n\t\t})\n\t\t.then(handleErrors)\n\t\t.then(response => response.json())\n\t\t.then(review => {\n\t\t\tdispatch(addReview(review))\n\t\t\tdispatch(resetReviewForm())\n\t\t})\n\t\t.catch(error => {\n\t\t\tdispatch({type: 'error'})\n\t\t})\n\t}\n}\n\nexport function handleErrors(response) {\n\tif(!response.ok) {\n\t\tthrow Error(response.statusText);\n\t}\n\treturn response;\n}"]},"metadata":{},"sourceType":"module"}